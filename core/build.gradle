plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.9.22'
}

sourceCompatibility = 1.7
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

sourceSets.main.java.srcDirs = [ "src/" ]

eclipse.project.name = appName + "-core"
repositories {
    mavenCentral()
}
dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

tasks.register('generateResourcesClass', JavaCompile) {
    def resourcesDir = "${project(':android') projectDir}/assets/textures/tiles/"
    def resourceFiles = fileTree(dir: resourcesDir).matching {
        include "**/*.png"
    }

    def resourceMap = [:]
    resourceFiles.each { file ->
        if (!file.getName().replaceAll('.png', '').matches(".*_[a-z]")) {
        def fieldName = file.getName().toUpperCase().replaceAll('\\W', '_').replaceAll('_PNG', '')
        resourceMap[fieldName] = file
        }
    }

    println "resourcesDir: $resourcesDir"
    println "resourceFiles: $resourceFiles"
    println "resourceMap: $resourceMap"

    doLast {
        def resourcesClass = file("$projectDir/src/ctmn/ctmn.petals/tile/Tiles.java")
        resourcesClass.parentFile.mkdirs()
        resourcesClass.withWriter { writer ->
            writer.println("package ctmn.petals.tile;")
            writer.println("")
            writer.println("public final class Tiles {")
            resourceMap.each { name, file ->
                writer.println("    public static final String ${name} = \"${file.getName().replaceAll('.png', '')}\";")
            }
            writer.println("}")
        }
    }
    source = sourceSets.main.java
    classpath = sourceSets.main.compileClasspath
    destinationDir = file("$projectDir/src/ctmn/ctmn.petals/")
    options.compilerArgs = ['-proc:none']

    inputs.files resourceFiles
    outputs.dir destinationDir
}